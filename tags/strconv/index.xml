<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>strconv on Hello</title><link>https://reggieteng.github.io/tags/strconv/</link><description>Recent content in strconv on Hello</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Tue, 20 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://reggieteng.github.io/tags/strconv/index.xml" rel="self" type="application/rss+xml"/><item><title>golang标准包--strconv</title><link>https://reggieteng.github.io/posts/2021/04/golang%E6%A0%87%E5%87%86%E5%8C%85-strconv/</link><pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate><guid>https://reggieteng.github.io/posts/2021/04/golang%E6%A0%87%E5%87%86%E5%8C%85-strconv/</guid><description>简介 strconv包实现了基本数据类型和其字符串表示的相互转换，常用于string转int
字符串转换为整型之间的转换 字符串转换为整型 包括三个函数：ParseInt()、ParseUint() 和 Atoi().其中Atoi()是ParseInt()的便捷版，内部通过调用ParseInt(s, 10, 0)来实现的; ParseInt 转为有符号整型；ParseUint 转为无符号整型，
// 参数 s 代表待转换的字符串 // 参数 base 代表字符串按照给定的进制进行解释 // 参数 bitSize 表示的是整数取值范围,或者说整数的具体类型。取值 0、8、16、32 和 64 分别代表 int、int8、int16、int32 和 int64。 func ParseInt(s string, base int, bitSize int) (i int64, err error) func ParseUint(s string, base int, bitSize int) (n uint64, err error) func Atoi(s string) (i int, err error) n, err := strconv.ParseInt(&amp;#34;128&amp;#34;, 10, 8) 注意:
如上转换ParseInt/ParseUint实现时,如果字符串表示的整数超过了bitSize参数能够表示的范围,则会返回ErrRange,同时会返回bitSize能够表示的最大或最小值.因此,这里的n是 127. ParseInt()返回的是int64,这是为了能够容纳所有的整型,在实际使用中,可以根据传递的 bitSize,然后将结果转为实际需要的类型.</description></item></channel></rss>